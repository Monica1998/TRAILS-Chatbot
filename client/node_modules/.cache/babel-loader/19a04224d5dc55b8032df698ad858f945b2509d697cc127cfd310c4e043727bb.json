{"ast":null,"code":"var _jsxFileName = \"/Users/monicakodwani/TRAILS/LLM/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ChatBox from './components/ChatBox';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [sessions, setSessions] = useState([]);\n  const [activeSession, setActiveSession] = useState(null);\n  const [userId, setUserId] = useState('');\n  const [initialized, setInitialized] = useState(false);\n  const [chatEnded, setChatEnded] = useState(false);\n  useEffect(() => {\n    const initializeUserId = async () => {\n      if (!initialized) {\n        const newUserId = prompt('Enter your user ID:');\n        if (newUserId) {\n          setUserId(newUserId);\n          setInitialized(true);\n          try {\n            const response = await axios.get(`http://localhost:5500/api/conversations/sessions/${newUserId}`);\n            setSessions(response.data);\n          } catch (error) {\n            console.error('Failed to fetch sessions:', error);\n          }\n        }\n      }\n    };\n    initializeUserId();\n  }, [initialized]);\n  const startNewSession = async () => {\n    const sessionName = prompt('Enter session name:');\n    if (!sessionName) return;\n    try {\n      const response = await axios.post('http://localhost:5500/api/messages/session', {\n        userId,\n        sessionName\n      });\n      setSessions([...sessions, {\n        sessionId: response.data.sessionId,\n        sessionName: response.data.sessionName\n      }]);\n      setActiveSession(response.data.sessionId);\n      setChatEnded(false); // Ensure chat interface is active\n    } catch (error) {\n      console.error('Failed to start a new session:', error);\n    }\n  };\n  const endChatExperience = () => {\n    setActiveSession(null);\n    setChatEnded(true); // Show thank you message\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chat Sessions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startNewSession,\n        children: \"New Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: sessions.map(session => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setActiveSession(session.sessionId),\n          children: session.sessionName\n        }, session.sessionId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: endChatExperience,\n        children: \"End Chat Experience\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"chat-header\",\n        children: \"TRAILS ChatBot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), chatEnded ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thank-you-message\",\n        children: \"Thank you for using the chat!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this) : activeSession && /*#__PURE__*/_jsxDEV(ChatBox, {\n        sessionId: activeSession\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"cEKnz/vo5qGDphO3odso7zAMDHQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","ChatBox","jsxDEV","_jsxDEV","App","_s","sessions","setSessions","activeSession","setActiveSession","userId","setUserId","initialized","setInitialized","chatEnded","setChatEnded","initializeUserId","newUserId","prompt","response","get","data","error","console","startNewSession","sessionName","post","sessionId","endChatExperience","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","session","_c","$RefreshReg$"],"sources":["/Users/monicakodwani/TRAILS/LLM/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ChatBox from './components/ChatBox';\nimport './App.css';\n\nfunction App() {\n  const [sessions, setSessions] = useState([]);\n  const [activeSession, setActiveSession] = useState(null);\n  const [userId, setUserId] = useState('');\n  const [initialized, setInitialized] = useState(false);\n  const [chatEnded, setChatEnded] = useState(false);\n\n  useEffect(() => {\n    const initializeUserId = async () => {\n      if (!initialized) {\n        const newUserId = prompt('Enter your user ID:');\n        if (newUserId) {\n          setUserId(newUserId);\n          setInitialized(true);\n\n          try {\n            const response = await axios.get(`http://localhost:5500/api/conversations/sessions/${newUserId}`);\n            setSessions(response.data);\n          } catch (error) {\n            console.error('Failed to fetch sessions:', error);\n          }\n        }\n      }\n    };\n\n    initializeUserId();\n  }, [initialized]);\n\n  const startNewSession = async () => {\n    const sessionName = prompt('Enter session name:');\n    if (!sessionName) return;\n\n    try {\n      const response = await axios.post('http://localhost:5500/api/messages/session', { userId, sessionName });\n      setSessions([...sessions, { sessionId: response.data.sessionId, sessionName: response.data.sessionName }]);\n      setActiveSession(response.data.sessionId);\n      setChatEnded(false); // Ensure chat interface is active\n    } catch (error) {\n      console.error('Failed to start a new session:', error);\n    }\n  };\n\n  const endChatExperience = () => {\n    setActiveSession(null);\n    setChatEnded(true); // Show thank you message\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"sidebar\">\n        <h2>Chat Sessions</h2>\n        <button onClick={startNewSession}>New Session</button>\n        <ul>\n          {sessions.map((session) => (\n            <li key={session.sessionId} onClick={() => setActiveSession(session.sessionId)}>\n              {session.sessionName}\n            </li>\n          ))}\n        </ul>\n        <button onClick={endChatExperience}>End Chat Experience</button>\n      </div>\n      <div className=\"chat-container\">\n        <header className=\"chat-header\">\n          TRAILS ChatBot\n        </header>\n        {chatEnded ? (\n          <div className=\"thank-you-message\">Thank you for using the chat!</div>\n        ) : (\n          activeSession && <ChatBox sessionId={activeSession} />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}