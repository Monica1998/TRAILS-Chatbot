{"ast":null,"code":"var _jsxFileName = \"/Users/monicakodwani/TRAILS/LLM/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ChatBox from './components/ChatBox';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [sessions, setSessions] = useState([]);\n  const [activeSession, setActiveSession] = useState(null);\n  const [userId, setUserId] = useState('user1'); // This should be dynamically set or fetched\n\n  useEffect(() => {\n    const fetchSessions = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5500/api/conversations/sessions/${userId}`);\n        setSessions(response.data);\n      } catch (error) {\n        console.error('Failed to fetch sessions:', error);\n      }\n    };\n    fetchSessions();\n  }, [userId]);\n  const startNewSession = async () => {\n    try {\n      const response = await axios.post('http://localhost:5500/api/messages/session', {\n        userId\n      });\n      setSessions([...sessions, response.data]);\n      setActiveSession(response.data.sessionId);\n    } catch (error) {\n      console.error('Failed to start a new session:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chat Sessions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startNewSession,\n        children: \"New Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: sessions.map(session => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => setActiveSession(session._id),\n          children: session._id\n        }, session._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"chat-header\",\n        children: \"TRAILS ChatBot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), activeSession && /*#__PURE__*/_jsxDEV(ChatBox, {\n        sessionId: activeSession\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gveAb0WFROuN0qoDL092hpMwRFQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","ChatBox","jsxDEV","_jsxDEV","App","_s","sessions","setSessions","activeSession","setActiveSession","userId","setUserId","fetchSessions","response","get","data","error","console","startNewSession","post","sessionId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","session","_id","_c","$RefreshReg$"],"sources":["/Users/monicakodwani/TRAILS/LLM/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ChatBox from './components/ChatBox';\nimport './App.css';\n\nfunction App() {\n  const [sessions, setSessions] = useState([]);\n  const [activeSession, setActiveSession] = useState(null);\n  const [userId, setUserId] = useState('user1'); // This should be dynamically set or fetched\n\n  useEffect(() => {\n    const fetchSessions = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5500/api/conversations/sessions/${userId}`);\n        setSessions(response.data);\n      } catch (error) {\n        console.error('Failed to fetch sessions:', error);\n      }\n    };\n\n    fetchSessions();\n  }, [userId]);\n\n  const startNewSession = async () => {\n    try {\n      const response = await axios.post('http://localhost:5500/api/messages/session', { userId });\n      setSessions([...sessions, response.data]);\n      setActiveSession(response.data.sessionId);\n    } catch (error) {\n      console.error('Failed to start a new session:', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"sidebar\">\n        <h2>Chat Sessions</h2>\n        <button onClick={startNewSession}>New Session</button>\n        <ul>\n          {sessions.map((session) => (\n            <li key={session._id} onClick={() => setActiveSession(session._id)}>\n              {session._id}\n            </li>\n          ))}\n        </ul>\n      </div>\n      <div className=\"chat-container\">\n        <header className=\"chat-header\">\n          TRAILS ChatBot\n        </header>\n        {activeSession && <ChatBox sessionId={activeSession} />}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;;EAE/CC,SAAS,CAAC,MAAM;IACd,MAAMa,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAE,oDAAmDJ,MAAO,EAAC,CAAC;QAC9FH,WAAW,CAACM,QAAQ,CAACE,IAAI,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEDJ,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACF,MAAM,CAAC,CAAC;EAEZ,MAAMQ,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACF,MAAML,QAAQ,GAAG,MAAMb,KAAK,CAACmB,IAAI,CAAC,4CAA4C,EAAE;QAAET;MAAO,CAAC,CAAC;MAC3FH,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEO,QAAQ,CAACE,IAAI,CAAC,CAAC;MACzCN,gBAAgB,CAACI,QAAQ,CAACE,IAAI,CAACK,SAAS,CAAC;IAC3C,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC;EAED,oBACEb,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnB,OAAA;MAAKkB,SAAS,EAAC,SAAS;MAAAC,QAAA,gBACtBnB,OAAA;QAAAmB,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBvB,OAAA;QAAQwB,OAAO,EAAET,eAAgB;QAAAI,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtDvB,OAAA;QAAAmB,QAAA,EACGhB,QAAQ,CAACsB,GAAG,CAAEC,OAAO,iBACpB1B,OAAA;UAAsBwB,OAAO,EAAEA,CAAA,KAAMlB,gBAAgB,CAACoB,OAAO,CAACC,GAAG,CAAE;UAAAR,QAAA,EAChEO,OAAO,CAACC;QAAG,GADLD,OAAO,CAACC,GAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEhB,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACNvB,OAAA;MAAKkB,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BnB,OAAA;QAAQkB,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAEhC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACRlB,aAAa,iBAAIL,OAAA,CAACF,OAAO;QAACmB,SAAS,EAAEZ;MAAc;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACrB,EAAA,CAjDQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}