{"ast":null,"code":"var _jsxFileName = \"/Users/monicakodwani/TRAILS/LLM/client/src/components/MessageForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Box, TextField, Button } from '@mui/material';\nimport './MessageForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MessageForm = ({\n  onSendMessage,\n  sessionId\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!message.trim()) return;\n    onSendMessage({\n      sender: 'user',\n      content: message\n    }); // Display user message immediately\n\n    const apiUrl = 'http://localhost:5500/api/messages/message';\n    try {\n      const response = await axios.post(apiUrl, {\n        sessionId,\n        message\n      });\n      onSendMessage({\n        sender: 'assistant',\n        content: response.data.botResponse\n      }); // Display bot message after response\n      setMessage(''); // Clear the input field after sending the message\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    onSubmit: handleSubmit,\n    sx: {\n      display: 'flex',\n      alignItems: 'center',\n      mt: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      variant: \"outlined\",\n      fullWidth: true,\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      placeholder: \"Type a message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      sx: {\n        ml: 2\n      },\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(MessageForm, \"l8KXAebGu4sZHsyCIQX7P8si41w=\");\n_c = MessageForm;\nexport default MessageForm;\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './MessageForm.css';\n\n// const MessageForm = ({ onSendMessage, sessionId }) => {\n//   const [message, setMessage] = useState('');\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!message.trim()) return;\n\n//     onSendMessage({ sender: 'user', content: message }); // Display user message immediately\n\n//     const apiUrl = 'http://localhost:5500/api/messages/message';\n\n//     try {\n//       const response = await axios.post(apiUrl, { sessionId, message });\n//       onSendMessage({ sender: 'assistant', content: response.data.botResponse }); // Display bot message after response\n//       setMessage(''); // Clear the input field after sending the message\n//     } catch (error) {\n//       console.error('Error sending message:', error);\n//     }\n//   };\n\n//   return (\n//     <form className=\"message-form\" onSubmit={handleSubmit}>\n//       <input\n//         type=\"text\"\n//         value={message}\n//         onChange={(e) => setMessage(e.target.value)}\n//         placeholder=\"Type a message...\"\n//       />\n//       <button type=\"submit\">Send</button>\n//     </form>\n//   );\n// };\n\n// export default MessageForm;\nvar _c;\n$RefreshReg$(_c, \"MessageForm\");","map":{"version":3,"names":["React","useState","axios","Box","TextField","Button","jsxDEV","_jsxDEV","MessageForm","onSendMessage","sessionId","_s","message","setMessage","handleSubmit","e","preventDefault","trim","sender","content","apiUrl","response","post","data","botResponse","error","console","component","onSubmit","sx","display","alignItems","mt","children","variant","fullWidth","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","color","ml","_c","$RefreshReg$"],"sources":["/Users/monicakodwani/TRAILS/LLM/client/src/components/MessageForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Box, TextField, Button } from '@mui/material';\nimport './MessageForm.css';\n\nconst MessageForm = ({ onSendMessage, sessionId }) => {\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!message.trim()) return;\n\n    onSendMessage({ sender: 'user', content: message }); // Display user message immediately\n\n    const apiUrl = 'http://localhost:5500/api/messages/message';\n\n    try {\n      const response = await axios.post(apiUrl, { sessionId, message });\n      onSendMessage({ sender: 'assistant', content: response.data.botResponse }); // Display bot message after response\n      setMessage(''); // Clear the input field after sending the message\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  };\n\n  return (\n    <Box component=\"form\" onSubmit={handleSubmit} sx={{ display: 'flex', alignItems: 'center', mt: 2 }}>\n      <TextField\n        variant=\"outlined\"\n        fullWidth\n        value={message}\n        onChange={(e) => setMessage(e.target.value)}\n        placeholder=\"Type a message...\"\n      />\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\" sx={{ ml: 2 }}>\n        Send\n      </Button>\n    </Box>\n  );\n};\n\nexport default MessageForm;\n\n\n\n// import React, { useState } from 'react';\n// import axios from 'axios';\n// import './MessageForm.css';\n\n// const MessageForm = ({ onSendMessage, sessionId }) => {\n//   const [message, setMessage] = useState('');\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!message.trim()) return;\n\n//     onSendMessage({ sender: 'user', content: message }); // Display user message immediately\n\n//     const apiUrl = 'http://localhost:5500/api/messages/message';\n\n//     try {\n//       const response = await axios.post(apiUrl, { sessionId, message });\n//       onSendMessage({ sender: 'assistant', content: response.data.botResponse }); // Display bot message after response\n//       setMessage(''); // Clear the input field after sending the message\n//     } catch (error) {\n//       console.error('Error sending message:', error);\n//     }\n//   };\n\n//   return (\n//     <form className=\"message-form\" onSubmit={handleSubmit}>\n//       <input\n//         type=\"text\"\n//         value={message}\n//         onChange={(e) => setMessage(e.target.value)}\n//         placeholder=\"Type a message...\"\n//       />\n//       <button type=\"submit\">Send</button>\n//     </form>\n//   );\n// };\n\n// export default MessageForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,SAAS,EAAEC,MAAM,QAAQ,eAAe;AACtD,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAC;EAAEC,aAAa;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACpD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMa,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACJ,OAAO,CAACK,IAAI,CAAC,CAAC,EAAE;IAErBR,aAAa,CAAC;MAAES,MAAM,EAAE,MAAM;MAAEC,OAAO,EAAEP;IAAQ,CAAC,CAAC,CAAC,CAAC;;IAErD,MAAMQ,MAAM,GAAG,4CAA4C;IAE3D,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAACF,MAAM,EAAE;QAAEV,SAAS;QAAEE;MAAQ,CAAC,CAAC;MACjEH,aAAa,CAAC;QAAES,MAAM,EAAE,WAAW;QAAEC,OAAO,EAAEE,QAAQ,CAACE,IAAI,CAACC;MAAY,CAAC,CAAC,CAAC,CAAC;MAC5EX,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,oBACElB,OAAA,CAACJ,GAAG;IAACwB,SAAS,EAAC,MAAM;IAACC,QAAQ,EAAEd,YAAa;IAACe,EAAE,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE,QAAQ;MAAEC,EAAE,EAAE;IAAE,CAAE;IAAAC,QAAA,gBACjG1B,OAAA,CAACH,SAAS;MACR8B,OAAO,EAAC,UAAU;MAClBC,SAAS;MACTC,KAAK,EAAExB,OAAQ;MACfyB,QAAQ,EAAGtB,CAAC,IAAKF,UAAU,CAACE,CAAC,CAACuB,MAAM,CAACF,KAAK,CAAE;MAC5CG,WAAW,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACFpC,OAAA,CAACF,MAAM;MAACuC,IAAI,EAAC,QAAQ;MAACV,OAAO,EAAC,WAAW;MAACW,KAAK,EAAC,SAAS;MAAChB,EAAE,EAAE;QAAEiB,EAAE,EAAE;MAAE,CAAE;MAAAb,QAAA,EAAC;IAEzE;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAChC,EAAA,CAlCIH,WAAW;AAAAuC,EAAA,GAAXvC,WAAW;AAoCjB,eAAeA,WAAW;;AAI1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}