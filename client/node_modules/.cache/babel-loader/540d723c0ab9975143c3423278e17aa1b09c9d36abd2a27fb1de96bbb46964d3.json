{"ast":null,"code":"var _jsxFileName = \"/Users/monicakodwani/TRAILS/LLM/client/src/components/ChatBox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport MessageForm from './MessageForm';\nimport Flag from './Flag';\nimport './ChatBox.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBox = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [sessionId, setSessionId] = useState('');\n  useEffect(() => {\n    const fetchSessionId = async () => {\n      try {\n        const response = await axios.post('http://localhost:5500/api/messages/session');\n        setSessionId(response.data.sessionId);\n      } catch (error) {\n        console.error('Failed to fetch session ID:', error);\n      }\n    };\n    fetchSessionId();\n  }, []);\n  const addMessage = msg => {\n    setMessages([...messages, msg]);\n  };\n  const handleFlag = index => {\n    const flaggedMessage = messages[index];\n    console.log('Flagged message:', flaggedMessage);\n    // Add your flag handling logic here (e.g., send to the server)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-box\",\n    children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: [msg.sender === 'user' ? 'You' : 'Bot', \": \", msg.content]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flag-button-container\",\n        children: /*#__PURE__*/_jsxDEV(Flag, {\n          onFlag: () => handleFlag(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(MessageForm, {\n      onSendMessage: addMessage,\n      sessionId: sessionId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBox, \"1X8x0w6Vb4ZVNjvlyTu6VVMSjEE=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","useEffect","axios","MessageForm","Flag","jsxDEV","_jsxDEV","ChatBox","_s","messages","setMessages","sessionId","setSessionId","fetchSessionId","response","post","data","error","console","addMessage","msg","handleFlag","index","flaggedMessage","log","className","children","map","sender","content","fileName","_jsxFileName","lineNumber","columnNumber","onFlag","onSendMessage","_c","$RefreshReg$"],"sources":["/Users/monicakodwani/TRAILS/LLM/client/src/components/ChatBox.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport MessageForm from './MessageForm';\nimport Flag from './Flag';\nimport './ChatBox.css'; // Import the CSS file\n\nconst ChatBox = () => {\n  const [messages, setMessages] = useState([]);\n  const [sessionId, setSessionId] = useState('');\n\n  useEffect(() => {\n    const fetchSessionId = async () => {\n      try {\n        const response = await axios.post('http://localhost:5500/api/messages/session');\n        setSessionId(response.data.sessionId);\n      } catch (error) {\n        console.error('Failed to fetch session ID:', error);\n      }\n    };\n\n    fetchSessionId();\n  }, []);\n\n  const addMessage = (msg) => {\n    setMessages([...messages, msg]);\n  };\n\n  const handleFlag = (index) => {\n    const flaggedMessage = messages[index];\n    console.log('Flagged message:', flaggedMessage);\n    // Add your flag handling logic here (e.g., send to the server)\n  };\n\n  return (\n    <div className=\"chat-box\">\n      {messages.map((msg, index) => (\n        <div key={index} className=\"message-container\">\n          <div className={`message ${msg.sender}`}>\n            {msg.sender === 'user' ? 'You' : 'Bot'}: {msg.content}\n          </div>\n          <div className=\"flag-button-container\">\n            <Flag onFlag={() => handleFlag(index)} />\n          </div>\n        </div>\n      ))}\n      <MessageForm onSendMessage={addMessage} sessionId={sessionId} />\n    </div>\n  );\n};\n\nexport default ChatBox;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMY,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,4CAA4C,CAAC;QAC/EH,YAAY,CAACE,QAAQ,CAACE,IAAI,CAACL,SAAS,CAAC;MACvC,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IAEDJ,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,UAAU,GAAIC,GAAG,IAAK;IAC1BV,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEW,GAAG,CAAC,CAAC;EACjC,CAAC;EAED,MAAMC,UAAU,GAAIC,KAAK,IAAK;IAC5B,MAAMC,cAAc,GAAGd,QAAQ,CAACa,KAAK,CAAC;IACtCJ,OAAO,CAACM,GAAG,CAAC,kBAAkB,EAAED,cAAc,CAAC;IAC/C;EACF,CAAC;EAED,oBACEjB,OAAA;IAAKmB,SAAS,EAAC,UAAU;IAAAC,QAAA,GACtBjB,QAAQ,CAACkB,GAAG,CAAC,CAACP,GAAG,EAAEE,KAAK,kBACvBhB,OAAA;MAAiBmB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAC5CpB,OAAA;QAAKmB,SAAS,EAAG,WAAUL,GAAG,CAACQ,MAAO,EAAE;QAAAF,QAAA,GACrCN,GAAG,CAACQ,MAAM,KAAK,MAAM,GAAG,KAAK,GAAG,KAAK,EAAC,IAAE,EAACR,GAAG,CAACS,OAAO;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eACN3B,OAAA;QAAKmB,SAAS,EAAC,uBAAuB;QAAAC,QAAA,eACpCpB,OAAA,CAACF,IAAI;UAAC8B,MAAM,EAAEA,CAAA,KAAMb,UAAU,CAACC,KAAK;QAAE;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAAA,GANEX,KAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOV,CACN,CAAC,eACF3B,OAAA,CAACH,WAAW;MAACgC,aAAa,EAAEhB,UAAW;MAACR,SAAS,EAAEA;IAAU;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7D,CAAC;AAEV,CAAC;AAACzB,EAAA,CA1CID,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AA4Cb,eAAeA,OAAO;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}